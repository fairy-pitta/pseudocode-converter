{"numFailedTestSuites":1,"numFailedTests":14,"numPassedTestSuites":0,"numPassedTests":28,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":42,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1748849106576,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":45,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle variable declarations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle variable declarations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle constants","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle constants"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle basic assignment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle basic assignment"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle arithmetic operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle arithmetic operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle string concatenation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle string concatenation"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle boolean operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle boolean operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle comparison operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle comparison operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle simple if statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle simple if statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle if-else statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle if-else statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":51,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle if-elif-else statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle if-elif-else statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":69,"failureDetails":[{"matcherResult":{"actual":["IF x > y THEN","IF x > z THEN","OUTPUT \"x is largest\"","ELSE","OUTPUT \"z is largest\"","ELSE","ENDIF","OUTPUT \"y might be largest\"","ENDIF","ENDIF"],"expected":["IF x > y THEN","IF x > z THEN","OUTPUT \"x is largest\"","ELSE","OUTPUT \"z is largest\"","ENDIF","ELSE","OUTPUT \"y might be largest\"","ENDIF"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[33m@@ -2,10 +2,11 @@\u001b[39m\n\u001b[2m    \"IF x > y THEN\",\u001b[22m\n\u001b[2m    \"IF x > z THEN\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"x is largest\\\"\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"z is largest\\\"\",\u001b[22m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"y might be largest\\\"\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[33m@@ -2,10 +2,11 @@\u001b[39m\n\u001b[2m    \"IF x > y THEN\",\u001b[22m\n\u001b[2m    \"IF x > z THEN\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"x is largest\\\"\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"z is largest\\\"\",\u001b[22m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"y might be largest\\\"\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:300:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle nested if statements","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle nested if statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with range"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with step","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with step"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with positive step","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with positive step"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":35,"failureDetails":[{"matcherResult":{"actual":["WHILE NOT EOF(\"file\")","READFILE \"file\", item","OUTPUT item","ENDWHILE"],"expected":["FOR EACH item IN my_list","OUTPUT item","NEXT item"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FOR EACH item IN my_list\",\u001b[39m\n\u001b[31m+   \"WHILE NOT EOF(\\\"file\\\")\",\u001b[39m\n\u001b[31m+   \"READFILE \\\"file\\\", item\",\u001b[39m\n\u001b[2m    \"OUTPUT item\",\u001b[22m\n\u001b[32m-   \"NEXT item\",\u001b[39m\n\u001b[31m+   \"ENDWHILE\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FOR EACH item IN my_list\",\u001b[39m\n\u001b[31m+   \"WHILE NOT EOF(\\\"file\\\")\",\u001b[39m\n\u001b[31m+   \"READFILE \\\"file\\\", item\",\u001b[39m\n\u001b[2m    \"OUTPUT item\",\u001b[22m\n\u001b[32m-   \"NEXT item\",\u001b[39m\n\u001b[31m+   \"ENDWHILE\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:379:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop over collection","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle for loop over collection"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle while loop","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle while loop"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle while loop with complex condition","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle while loop with complex condition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle function definition","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle function definition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["FUNCTION Add(x : STRING, y : STRING) RETURNS INTEGER","RETURN x + y","ENDFUNCTION"],"expected":["FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER","RETURN x + y","ENDFUNCTION"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n\u001b[31m+   \"FUNCTION Add(x : STRING, y : STRING) RETURNS INTEGER\",\u001b[39m\n\u001b[2m    \"RETURN x + y\",\u001b[22m\n\u001b[2m    \"ENDFUNCTION\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n\u001b[31m+   \"FUNCTION Add(x : STRING, y : STRING) RETURNS INTEGER\",\u001b[39m\n\u001b[2m    \"RETURN x + y\",\u001b[22m\n\u001b[2m    \"ENDFUNCTION\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:496:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function with return","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function with return"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle function with multiple parameters and types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle function with multiple parameters and types"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["result ← NEW add(5, 3)","// TODO: greet(\"John\")"],"expected":["result ← Add(5, 3)","CALL Greet(\"John\")"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"result ← Add(5, 3)\",\u001b[39m\n\u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n\u001b[31m+   \"result ← NEW add(5, 3)\",\u001b[39m\n\u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"result ← Add(5, 3)\",\u001b[39m\n\u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n\u001b[31m+   \"result ← NEW add(5, 3)\",\u001b[39m\n\u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:546:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function call","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function call"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":38,"failureDetails":[{"matcherResult":{"actual":["","numbers.0 ← 1","numbers.1 ← 2","numbers.2 ← 3","numbers.3 ← 4","numbers.4 ← 5","first ← numbers[0]","numbers.1 ← 10"],"expected":["DECLARE numbers : ARRAY[0:4] OF STRING","numbers[0] ← \"1\"","numbers[1] ← \"2\"","numbers[2] ← \"3\"","numbers[3] ← \"4\"","numbers[4] ← \"5\"","first ← numbers[0]","numbers[1] ← \"10\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n\u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n\u001b[31m+   \"\",\u001b[39m\n\u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n\u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n\u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n\u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n\u001b[2m    \"first ← numbers[0]\",\u001b[22m\n\u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n\u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n\u001b[31m+   \"\",\u001b[39m\n\u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n\u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n\u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n\u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n\u001b[2m    \"first ← numbers[0]\",\u001b[22m\n\u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:575:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle list declaration and access","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle list declaration and access"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["mixed[0] ← 1","mixed[1] ← \"hello\"","mixed[2] ← TRUE"],"expected":["mixed[0] ← \"1\"","mixed[1] ← \"hello\"","mixed[2] ← \"TRUE\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n\u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n\u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n\u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n\u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:593:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle list with mixed types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle list with mixed types"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle input statements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle input statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle print statements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle print statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle comments","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle comments"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":88,"failureDetails":[{"matcherResult":{"actual":["// Error handling: try-except block","IF x ≠ 0 THEN","result ← 10 / x","ENDIF","ELSE","OUTPUT \"Error occurred\"","END EXCEPT"],"expected":["// Error handling: try-except block","IF x ≠ 0 THEN","result ← 10 / x","ELSE","OUTPUT \"Error occurred\"","ENDIF"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n\u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n\u001b[2m    \"result ← 10 / x\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n\u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n\u001b[2m    \"result ← 10 / x\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:676:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle try-except block","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle try-except block"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":40,"failureDetails":[{"matcherResult":{"actual":["// Error handling: try-except block","IF x ≠ 0 THEN","OPENFILE \"data.txt\" FOR READ","READFILE \"data.txt\", data","ENDIF","ELSE","OUTPUT \"File NOT found\"","END EXCEPT","// Finally block","OUTPUT \"Cleanup\"","END FINALLY"],"expected":["// Error handling: try-except-finally block","OPENFILE \"data.txt\" FOR READ","IF file_exists THEN","READFILE \"data.txt\", data","ELSE","OUTPUT \"File not found\"","ENDIF","OUTPUT \"Cleanup\"","CLOSEFILE \"data.txt\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n\u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n\u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n\u001b[2m    \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[22m\n\u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n\u001b[2m    \"READFILE \\\"data.txt\\\", data\",\u001b[22m\n\u001b[32m-   \"ELSE\",\u001b[39m\n\u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[31m+   \"ELSE\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[31m+   \"// Finally block\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Cleanup\\\"\",\u001b[22m\n\u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n\u001b[31m+   \"END FINALLY\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n\u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n\u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n\u001b[2m    \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[22m\n\u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n\u001b[2m    \"READFILE \\\"data.txt\\\", data\",\u001b[22m\n\u001b[32m-   \"ELSE\",\u001b[39m\n\u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[31m+   \"ELSE\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[31m+   \"// Finally block\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Cleanup\\\"\",\u001b[22m\n\u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n\u001b[31m+   \"END FINALLY\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:704:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle try-except-finally block","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle try-except-finally block"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":38,"failureDetails":[{"matcherResult":{"actual":["CLASS Animal","PROCEDURE __init__(self : STRING, name : STRING)","self.name ← name","","ENDPROCEDURE","PROCEDURE Speak(self : STRING)","OUTPUT \"Animal sound\"","ENDPROCEDURE","ENDCLASS"],"expected":["CLASS Animal","PRIVATE name : STRING","","PUBLIC PROCEDURE NEW(name : STRING)","self.name ← name","ENDPROCEDURE","","PUBLIC PROCEDURE Speak()","OUTPUT \"Animal sound\"","ENDPROCEDURE","ENDCLASS"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Animal\",\u001b[22m\n\u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n\u001b[31m+   \"PROCEDURE __init__(self : STRING, name : STRING)\",\u001b[39m\n\u001b[31m+   \"self.name ← name\",\u001b[39m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n\u001b[32m-   \"self.name ← name\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[32m-   \"\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Animal sound\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Animal\",\u001b[22m\n\u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n\u001b[31m+   \"PROCEDURE __init__(self : STRING, name : STRING)\",\u001b[39m\n\u001b[31m+   \"self.name ← name\",\u001b[39m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n\u001b[32m-   \"self.name ← name\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[32m-   \"\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Animal sound\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:734:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle class definition","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle class definition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":21,"failureDetails":[{"matcherResult":{"actual":["CLASS Dog INHERITS Animal","PROCEDURE Speak(self : STRING)","OUTPUT \"Woof\"","ENDPROCEDURE","ENDCLASS"],"expected":["CLASS Dog INHERITS Animal","PUBLIC PROCEDURE Speak()","OUTPUT \"Woof\"","ENDPROCEDURE","ENDCLASS"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Dog INHERITS Animal\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Dog INHERITS Animal\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:754:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle class inheritance","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle class inheritance"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["my_dog ← NEW Dog(\"Buddy\")","CALL my_dog.Speak()"],"expected":["DECLARE my_dog : Dog","my_dog ← NEW Dog(\"Buddy\")","CALL my_dog.Speak()"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n\u001b[2m    \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[22m\n\u001b[2m    \"CALL my_dog.Speak()\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n\u001b[2m    \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[22m\n\u001b[2m    \"CALL my_dog.Speak()\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:771:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle object instantiation and method calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle object instantiation and method calls"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle file operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle file operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle file writing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle file writing"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":42,"failureDetails":[{"matcherResult":{"actual":["FOR i ← 0 TO 9","IF i = 5 THEN","EXIT FOR","ENDIF","IF i MOD 2 = 0 THEN","NEXT i","ENDIF","OUTPUT i","NEXT i"],"expected":["FOR i ← 0 TO 9","IF i = 5 THEN","EXIT FOR","IF i MOD 2 = 0 THEN","NEXT i","OUTPUT i","ENDIF","ENDIF","NEXT i"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"FOR i ← 0 TO 9\",\u001b[22m\n\u001b[2m    \"IF i = 5 THEN\",\u001b[22m\n\u001b[2m    \"EXIT FOR\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"IF i MOD 2 = 0 THEN\",\u001b[22m\n\u001b[2m    \"NEXT i\",\u001b[22m\n\u001b[32m-   \"OUTPUT i\",\u001b[39m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[31m+   \"OUTPUT i\",\u001b[39m\n\u001b[2m    \"NEXT i\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"FOR i ← 0 TO 9\",\u001b[22m\n\u001b[2m    \"IF i = 5 THEN\",\u001b[22m\n\u001b[2m    \"EXIT FOR\",\u001b[22m\n\u001b[31m+   \"ENDIF\",\u001b[39m\n\u001b[2m    \"IF i MOD 2 = 0 THEN\",\u001b[22m\n\u001b[2m    \"NEXT i\",\u001b[22m\n\u001b[32m-   \"OUTPUT i\",\u001b[39m\n\u001b[32m-   \"ENDIF\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[31m+   \"OUTPUT i\",\u001b[39m\n\u001b[2m    \"NEXT i\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:858:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle break and continue in loops","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle break and continue in loops"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle dictionary operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle dictionary operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle complex mathematical expressions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle complex mathematical expressions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle multiple variable assignment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple variable assignment"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["FUNCTION Square(x : INTEGER) RETURNS INTEGER","RETURN x * x","ENDFUNCTION","","result ← NEW square(5)"],"expected":["FUNCTION Square(x : INTEGER) RETURNS INTEGER","RETURN x * x","ENDFUNCTION","","result ← Square(5)"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"FUNCTION Square(x : INTEGER) RETURNS INTEGER\",\u001b[22m\n\u001b[2m    \"RETURN x * x\",\u001b[22m\n\u001b[2m    \"ENDFUNCTION\",\u001b[22m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"result ← Square(5)\",\u001b[39m\n\u001b[31m+   \"result ← NEW square(5)\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"FUNCTION Square(x : INTEGER) RETURNS INTEGER\",\u001b[22m\n\u001b[2m    \"RETURN x * x\",\u001b[22m\n\u001b[2m    \"ENDFUNCTION\",\u001b[22m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"result ← Square(5)\",\u001b[39m\n\u001b[31m+   \"result ← NEW square(5)\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:943:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle lambda functions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle lambda functions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle list comprehensions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle list comprehensions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["text ← \"Hello World\"","upper_text ← text.Upper()","length ← LENGTH(text)","first_char ← text[0]"],"expected":["text ← \"Hello World\"","upper_text ← UPPER(text)","length ← LENGTH(text)","first_char ← text[0]"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n\u001b[32m-   \"upper_text ← UPPER(text)\",\u001b[39m\n\u001b[31m+   \"upper_text ← text.Upper()\",\u001b[39m\n\u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n\u001b[2m    \"first_char ← text[0]\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n\u001b[32m-   \"upper_text ← UPPER(text)\",\u001b[39m\n\u001b[31m+   \"upper_text ← text.Upper()\",\u001b[39m\n\u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n\u001b[2m    \"first_char ← text[0]\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:983:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle string methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle string methods"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle boolean values and operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle boolean values and operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle nested loops","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle nested loops"}],"endTime":1748849108059,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle nested if statements\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[33m@@ -2,10 +2,11 @@\u001b[39m\n    \u001b[2m    \"IF x > y THEN\",\u001b[22m\n    \u001b[2m    \"IF x > z THEN\",\u001b[22m\n    \u001b[2m    \"OUTPUT \\\"x is largest\\\"\",\u001b[22m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[2m    \"OUTPUT \\\"z is largest\\\"\",\u001b[22m\n    \u001b[32m-   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[31m+   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"OUTPUT \\\"y might be largest\\\"\",\u001b[22m\n    \u001b[31m+   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 298 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 299 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 300 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 301 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 303 |\u001b[39m   \u001b[90m// 8. FOR Loops\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:300:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle for loop over collection\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"FOR EACH item IN my_list\",\u001b[39m\n    \u001b[31m+   \"WHILE NOT EOF(\\\"file\\\")\",\u001b[39m\n    \u001b[31m+   \"READFILE \\\"file\\\", item\",\u001b[39m\n    \u001b[2m    \"OUTPUT item\",\u001b[22m\n    \u001b[32m-   \"NEXT item\",\u001b[39m\n    \u001b[31m+   \"ENDWHILE\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 377 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 378 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 379 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 380 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 381 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 382 |\u001b[39m   \u001b[90m// 9. WHILE Loops\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:379:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function with return\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n    \u001b[31m+   \"FUNCTION Add(x : STRING, y : STRING) RETURNS INTEGER\",\u001b[39m\n    \u001b[2m    \"RETURN x + y\",\u001b[22m\n    \u001b[2m    \"ENDFUNCTION\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 494 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 495 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 496 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 497 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 498 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 499 |\u001b[39m   test(\u001b[32m'should handle function with multiple parameters and types'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:496:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function call\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"result ← Add(5, 3)\",\u001b[39m\n    \u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n    \u001b[31m+   \"result ← NEW add(5, 3)\",\u001b[39m\n    \u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 544 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 545 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 546 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 547 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 548 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 549 |\u001b[39m   \u001b[90m// 11. Arrays/Lists\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:546:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle list declaration and access\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 7\u001b[39m\n    \u001b[31m+ Received  + 7\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n    \u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n    \u001b[31m+   \"\",\u001b[39m\n    \u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n    \u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n    \u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n    \u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n    \u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n    \u001b[2m    \"first ← numbers[0]\",\u001b[22m\n    \u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n    \u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 573 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 574 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 575 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 576 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 577 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 578 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:575:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle list with mixed types\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n    \u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n    \u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n    \u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n    \u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 591 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 593 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 594 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 595 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 596 |\u001b[39m   \u001b[90m// 12. Input/Output\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:593:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle try-except block\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n    \u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n    \u001b[2m    \"result ← 10 / x\",\u001b[22m\n    \u001b[31m+   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n    \u001b[32m-   \"ENDIF\",\u001b[39m\n    \u001b[31m+   \"END EXCEPT\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 674 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 675 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 676 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 677 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 678 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 679 |\u001b[39m   test(\u001b[32m'should handle try-except-finally block'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:676:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle try-except-finally block\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 5\u001b[39m\n    \u001b[31m+ Received  + 7\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n    \u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n    \u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n    \u001b[2m    \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[22m\n    \u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n    \u001b[2m    \"READFILE \\\"data.txt\\\", data\",\u001b[22m\n    \u001b[32m-   \"ELSE\",\u001b[39m\n    \u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[31m+   \"ELSE\",\u001b[39m\n    \u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n    \u001b[31m+   \"END EXCEPT\",\u001b[39m\n    \u001b[31m+   \"// Finally block\",\u001b[39m\n    \u001b[2m    \"OUTPUT \\\"Cleanup\\\"\",\u001b[22m\n    \u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n    \u001b[31m+   \"END FINALLY\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 702 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 703 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 704 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 705 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 706 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 707 |\u001b[39m   \u001b[90m// 15. Classes (Object-Oriented Programming)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:704:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle class definition\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 5\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"CLASS Animal\",\u001b[22m\n    \u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE __init__(self : STRING, name : STRING)\",\u001b[39m\n    \u001b[31m+   \"self.name ← name\",\u001b[39m\n    \u001b[2m    \"\",\u001b[22m\n    \u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n    \u001b[32m-   \"self.name ← name\",\u001b[39m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[32m-   \"\",\u001b[39m\n    \u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n    \u001b[2m    \"OUTPUT \\\"Animal sound\\\"\",\u001b[22m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[2m    \"ENDCLASS\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 732 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 733 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 734 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 735 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 736 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 737 |\u001b[39m   test(\u001b[32m'should handle class inheritance'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:734:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle class inheritance\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"CLASS Dog INHERITS Animal\",\u001b[22m\n    \u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE Speak(self : STRING)\",\u001b[39m\n    \u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[2m    \"ENDCLASS\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 752 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 753 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 754 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 755 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 756 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 757 |\u001b[39m   test(\u001b[32m'should handle object instantiation and method calls'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:754:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle object instantiation and method calls\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n    \u001b[2m    \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[22m\n    \u001b[2m    \"CALL my_dog.Speak()\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 769 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 770 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 771 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 772 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 773 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 774 |\u001b[39m   \u001b[90m// 16. File Handling\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:771:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle break and continue in loops\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"FOR i ← 0 TO 9\",\u001b[22m\n    \u001b[2m    \"IF i = 5 THEN\",\u001b[22m\n    \u001b[2m    \"EXIT FOR\",\u001b[22m\n    \u001b[31m+   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"IF i MOD 2 = 0 THEN\",\u001b[22m\n    \u001b[2m    \"NEXT i\",\u001b[22m\n    \u001b[32m-   \"OUTPUT i\",\u001b[39m\n    \u001b[32m-   \"ENDIF\",\u001b[39m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[31m+   \"OUTPUT i\",\u001b[39m\n    \u001b[2m    \"NEXT i\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 856 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 857 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 858 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 859 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 860 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 861 |\u001b[39m   \u001b[90m// 18. Dictionary/Record-like structures\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:858:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle lambda functions\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"FUNCTION Square(x : INTEGER) RETURNS INTEGER\",\u001b[22m\n    \u001b[2m    \"RETURN x * x\",\u001b[22m\n    \u001b[2m    \"ENDFUNCTION\",\u001b[22m\n    \u001b[2m    \"\",\u001b[22m\n    \u001b[32m-   \"result ← Square(5)\",\u001b[39m\n    \u001b[31m+   \"result ← NEW square(5)\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 941 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 942 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 943 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 944 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 945 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 946 |\u001b[39m   \u001b[90m// 22. List Comprehensions (as loops)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:943:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle string methods\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n    \u001b[32m-   \"upper_text ← UPPER(text)\",\u001b[39m\n    \u001b[31m+   \"upper_text ← text.Upper()\",\u001b[39m\n    \u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n    \u001b[2m    \"first_char ← text[0]\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 981 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 982 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 983 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 984 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 985 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 986 |\u001b[39m   \u001b[90m// 24. Boolean Values\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:983:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts","startTime":1748849106804,"status":"failed","summary":""}],"wasInterrupted":false}
