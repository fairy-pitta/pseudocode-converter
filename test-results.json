{"numFailedTestSuites":1,"numFailedTests":16,"numPassedTestSuites":0,"numPassedTests":26,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":42,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1748832712406,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle variable declarations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle variable declarations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle constants","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle constants"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle basic assignment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle basic assignment"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle arithmetic operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle arithmetic operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle string concatenation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle string concatenation"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle boolean operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle boolean operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle comparison operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle comparison operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle simple if statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle simple if statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle if-else statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle if-else statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle if-elif-else statement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle if-elif-else statement"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle nested if statements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle nested if statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with range"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with step","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with step"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop with positive step","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop with positive step"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle for loop over collection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle for loop over collection"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle while loop","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle while loop"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle while loop with complex condition","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle while loop with complex condition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":10,"failureDetails":[{}],"failureMessages":["Error: Content mismatch (without indentation):\nActual: [\"PROCEDURE greet(name)\",\"OUTPUT \\\"Hello\\\", name\",\"ENDPROCEDURE\"]\nExpected: [\"PROCEDURE Greet(name : STRING)\",\"OUTPUT \\\"Hello\\\", name\",\"ENDPROCEDURE\"]\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:467:13)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function definition","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function definition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":16,"failureDetails":[{"matcherResult":{"actual":["PROCEDURE add(x, y)","RETURN x + y","ENDPROCEDURE"],"expected":["FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER","RETURN x + y","ENDFUNCTION"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n\u001b[31m+   \"PROCEDURE add(x, y)\",\u001b[39m\n\u001b[2m    \"RETURN x + y\",\u001b[22m\n\u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n\u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n\u001b[31m+   \"PROCEDURE add(x, y)\",\u001b[39m\n\u001b[2m    \"RETURN x + y\",\u001b[22m\n\u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n\u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:496:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function with return","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function with return"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["PROCEDURE calculate(num1, num2, operation)","IF operation = \"add\" THEN","RETURN num1 + num2","ELSE","RETURN num1 - num2","ENDIF","ENDPROCEDURE"],"expected":["FUNCTION Calculate(num1 : REAL, num2 : REAL, operation : STRING) RETURNS REAL","IF operation = \"add\" THEN","RETURN num1 + num2","ELSE","RETURN num1 - num2","ENDIF","ENDFUNCTION"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Calculate(num1 : REAL, num2 : REAL, operation : STRING) RETURNS REAL\",\u001b[39m\n\u001b[31m+   \"PROCEDURE calculate(num1, num2, operation)\",\u001b[39m\n\u001b[2m    \"IF operation = \\\"add\\\" THEN\",\u001b[22m\n\u001b[2m    \"RETURN num1 + num2\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"RETURN num1 - num2\",\u001b[22m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n\u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"FUNCTION Calculate(num1 : REAL, num2 : REAL, operation : STRING) RETURNS REAL\",\u001b[39m\n\u001b[31m+   \"PROCEDURE calculate(num1, num2, operation)\",\u001b[39m\n\u001b[2m    \"IF operation = \\\"add\\\" THEN\",\u001b[22m\n\u001b[2m    \"RETURN num1 + num2\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"RETURN num1 - num2\",\u001b[22m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n\u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:530:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function with multiple parameters and types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function with multiple parameters and types"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["result ← Add(5, 3)","// TODO: greet(\"John\")"],"expected":["result ← Add(5, 3)","CALL Greet(\"John\")"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"result ← Add(5, 3)\",\u001b[22m\n\u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"result ← Add(5, 3)\",\u001b[22m\n\u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:546:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle function call","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle function call"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["","numbers.0 ← 1","numbers.1 ← 2","numbers.2 ← 3","numbers.3 ← 4","numbers.4 ← 5","first ← numbers[0]","numbers.1 ← 10"],"expected":["DECLARE numbers : ARRAY[0:4] OF STRING","numbers[0] ← \"1\"","numbers[1] ← \"2\"","numbers[2] ← \"3\"","numbers[3] ← \"4\"","numbers[4] ← \"5\"","first ← numbers[0]","numbers[1] ← \"10\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n\u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n\u001b[31m+   \"\",\u001b[39m\n\u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n\u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n\u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n\u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n\u001b[2m    \"first ← numbers[0]\",\u001b[22m\n\u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 7\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n\u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n\u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n\u001b[31m+   \"\",\u001b[39m\n\u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n\u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n\u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n\u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n\u001b[2m    \"first ← numbers[0]\",\u001b[22m\n\u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n\u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:575:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle list declaration and access","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle list declaration and access"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["mixed[0] ← 1","mixed[1] ← \"hello\"","mixed[2] ← TRUE"],"expected":["mixed[0] ← \"1\"","mixed[1] ← \"hello\"","mixed[2] ← \"TRUE\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n\u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n\u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n\u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n\u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n\u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:593:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle list with mixed types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle list with mixed types"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["INPUT name","INPUT age"],"expected":["OUTPUT \"Enter your name: \"","INPUT name","OUTPUT \"Enter your age: \"","INPUT age"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Enter your name: \\\"\",\u001b[39m\n\u001b[2m    \"INPUT name\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Enter your age: \\\"\",\u001b[39m\n\u001b[2m    \"INPUT age\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Enter your name: \\\"\",\u001b[39m\n\u001b[2m    \"INPUT name\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Enter your age: \\\"\",\u001b[39m\n\u001b[2m    \"INPUT age\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:612:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle input statements","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle input statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle print statements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle print statements"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle comments","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle comments"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["// Error handling: try-except block","IF x ≠ 0 THEN","result ← 10 / x","ELSE","OUTPUT \"Error occurred\"","END EXCEPT","ENDIF"],"expected":["// Error handling: try-except block","IF x ≠ 0 THEN","result ← 10 / x","ELSE","OUTPUT \"Error occurred\"","ENDIF"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -2,7 +2,8 @@\u001b[39m\n\u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n\u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n\u001b[2m    \"result ← 10 / x\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -2,7 +2,8 @@\u001b[39m\n\u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n\u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n\u001b[2m    \"result ← 10 / x\",\u001b[22m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:676:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle try-except block","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle try-except block"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":25,"failureDetails":[{"matcherResult":{"actual":["// Error handling: try-except block","IF x ≠ 0 THEN","file ← Open(\"data.txt\")","data ← file.Read()","ELSE","OUTPUT \"File NOT found\"","// Finally block","OUTPUT \"Cleanup\"","END FINALLY","END EXCEPT","ENDIF"],"expected":["// Error handling: try-except-finally block","OPENFILE \"data.txt\" FOR READ","IF file_exists THEN","READFILE \"data.txt\", data","ELSE","OUTPUT \"File not found\"","ENDIF","OUTPUT \"Cleanup\"","CLOSEFILE \"data.txt\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 9\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n\u001b[32m-   \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[39m\n\u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n\u001b[32m-   \"READFILE \\\"data.txt\\\", data\",\u001b[39m\n\u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n\u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n\u001b[31m+   \"file ← Open(\\\"data.txt\\\")\",\u001b[39m\n\u001b[31m+   \"data ← file.Read()\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n\u001b[31m+   \"// Finally block\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n\u001b[31m+   \"END FINALLY\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 7\u001b[39m\n\u001b[31m+ Received  + 9\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n\u001b[32m-   \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[39m\n\u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n\u001b[32m-   \"READFILE \\\"data.txt\\\", data\",\u001b[39m\n\u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n\u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n\u001b[31m+   \"file ← Open(\\\"data.txt\\\")\",\u001b[39m\n\u001b[31m+   \"data ← file.Read()\",\u001b[39m\n\u001b[2m    \"ELSE\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n\u001b[31m+   \"// Finally block\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n\u001b[31m+   \"END FINALLY\",\u001b[39m\n\u001b[31m+   \"END EXCEPT\",\u001b[39m\n\u001b[2m    \"ENDIF\",\u001b[22m\n\u001b[32m-   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:704:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle try-except-finally block","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle try-except-finally block"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["CLASS Animal","PROCEDURE __init__(self, name)","// TODO: self.name = name","","PROCEDURE speak(self)","OUTPUT \"Animal sound\"","ENDPROCEDURE","ENDPROCEDURE","ENDCLASS"],"expected":["CLASS Animal","PRIVATE name : STRING","","PUBLIC PROCEDURE NEW(name : STRING)","self.name ← name","ENDPROCEDURE","","PUBLIC PROCEDURE Speak()","OUTPUT \"Animal sound\"","ENDPROCEDURE","ENDCLASS"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Animal\",\u001b[22m\n\u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n\u001b[31m+   \"PROCEDURE __init__(self, name)\",\u001b[39m\n\u001b[31m+   \"// TODO: self.name = name\",\u001b[39m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n\u001b[32m-   \"self.name ← name\",\u001b[39m\n\u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[32m-   \"\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[32m-   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"CLASS Animal\",\u001b[22m\n\u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n\u001b[31m+   \"PROCEDURE __init__(self, name)\",\u001b[39m\n\u001b[31m+   \"// TODO: self.name = name\",\u001b[39m\n\u001b[2m    \"\",\u001b[22m\n\u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n\u001b[32m-   \"self.name ← name\",\u001b[39m\n\u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n\u001b[31m+   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[32m-   \"\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[32m-   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:734:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle class definition","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle class definition"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["CLASS Dog","PROCEDURE speak(self)","OUTPUT \"Woof\"","ENDPROCEDURE","ENDCLASS"],"expected":["CLASS Dog INHERITS Animal","PUBLIC PROCEDURE Speak()","OUTPUT \"Woof\"","ENDPROCEDURE","ENDCLASS"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"CLASS Dog INHERITS Animal\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"CLASS Dog\",\u001b[39m\n\u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"CLASS Dog INHERITS Animal\",\u001b[39m\n\u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n\u001b[31m+   \"CLASS Dog\",\u001b[39m\n\u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n\u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n\u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n\u001b[2m    \"ENDCLASS\",\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:754:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle class inheritance","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle class inheritance"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["my_dog ← Dog(\"Buddy\")","// TODO: my_dog.speak()"],"expected":["DECLARE my_dog : Dog","my_dog ← NEW Dog(\"Buddy\")","CALL my_dog.Speak()"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n\u001b[32m-   \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[39m\n\u001b[32m-   \"CALL my_dog.Speak()\",\u001b[39m\n\u001b[31m+   \"my_dog ← Dog(\\\"Buddy\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: my_dog.speak()\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n\u001b[32m-   \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[39m\n\u001b[32m-   \"CALL my_dog.Speak()\",\u001b[39m\n\u001b[31m+   \"my_dog ← Dog(\\\"Buddy\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: my_dog.speak()\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:771:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle object instantiation and method calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle object instantiation and method calls"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["// TODO: with open(\"input.txt\", \"r\") as file:","FOR EACH line IN file","OUTPUT line.strip(","NEXT line"],"expected":["OPENFILE \"input.txt\" FOR READ","WHILE NOT EOF(\"input.txt\")","READFILE \"input.txt\", line","OUTPUT line","ENDWHILE","CLOSEFILE \"input.txt\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OPENFILE \\\"input.txt\\\" FOR READ\",\u001b[39m\n\u001b[32m-   \"WHILE NOT EOF(\\\"input.txt\\\")\",\u001b[39m\n\u001b[32m-   \"READFILE \\\"input.txt\\\", line\",\u001b[39m\n\u001b[32m-   \"OUTPUT line\",\u001b[39m\n\u001b[32m-   \"ENDWHILE\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"input.txt\\\"\",\u001b[39m\n\u001b[31m+   \"// TODO: with open(\\\"input.txt\\\", \\\"r\\\") as file:\",\u001b[39m\n\u001b[31m+   \"FOR EACH line IN file\",\u001b[39m\n\u001b[31m+   \"OUTPUT line.strip(\",\u001b[39m\n\u001b[31m+   \"NEXT line\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OPENFILE \\\"input.txt\\\" FOR READ\",\u001b[39m\n\u001b[32m-   \"WHILE NOT EOF(\\\"input.txt\\\")\",\u001b[39m\n\u001b[32m-   \"READFILE \\\"input.txt\\\", line\",\u001b[39m\n\u001b[32m-   \"OUTPUT line\",\u001b[39m\n\u001b[32m-   \"ENDWHILE\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"input.txt\\\"\",\u001b[39m\n\u001b[31m+   \"// TODO: with open(\\\"input.txt\\\", \\\"r\\\") as file:\",\u001b[39m\n\u001b[31m+   \"FOR EACH line IN file\",\u001b[39m\n\u001b[31m+   \"OUTPUT line.strip(\",\u001b[39m\n\u001b[31m+   \"NEXT line\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:793:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle file operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle file operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["// TODO: with open(\"output.txt\", \"w\") as file:","// TODO: file.write(\"Hello World\")","// TODO: file.write(str(number))"],"expected":["OPENFILE \"output.txt\" FOR WRITE","WRITEFILE \"output.txt\", \"Hello World\"","WRITEFILE \"output.txt\", number","CLOSEFILE \"output.txt\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 4\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OPENFILE \\\"output.txt\\\" FOR WRITE\",\u001b[39m\n\u001b[32m-   \"WRITEFILE \\\"output.txt\\\", \\\"Hello World\\\"\",\u001b[39m\n\u001b[32m-   \"WRITEFILE \\\"output.txt\\\", number\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"output.txt\\\"\",\u001b[39m\n\u001b[31m+   \"// TODO: with open(\\\"output.txt\\\", \\\"w\\\") as file:\",\u001b[39m\n\u001b[31m+   \"// TODO: file.write(\\\"Hello World\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: file.write(str(number))\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 4\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"OPENFILE \\\"output.txt\\\" FOR WRITE\",\u001b[39m\n\u001b[32m-   \"WRITEFILE \\\"output.txt\\\", \\\"Hello World\\\"\",\u001b[39m\n\u001b[32m-   \"WRITEFILE \\\"output.txt\\\", number\",\u001b[39m\n\u001b[32m-   \"CLOSEFILE \\\"output.txt\\\"\",\u001b[39m\n\u001b[31m+   \"// TODO: with open(\\\"output.txt\\\", \\\"w\\\") as file:\",\u001b[39m\n\u001b[31m+   \"// TODO: file.write(\\\"Hello World\\\")\",\u001b[39m\n\u001b[31m+   \"// TODO: file.write(str(number))\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:812:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle file writing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle file writing"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle break and continue in loops","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle break and continue in loops"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":8,"failureDetails":[{"matcherResult":{"actual":["TYPE StudentRecord","name : STRING","age : INTEGER","ENDTYPE","","DECLARE student : StudentRecord","student.name ← \"John\"","student.age ← 20","OUTPUT student[\"name\"]","// TODO: student[\"grade\"] = \"A\""],"expected":["TYPE StudentRecord","name : STRING","age : INTEGER","grade : STRING","ENDTYPE","","student.name ← \"John\"","student.age ← 20","OUTPUT student.name","student.grade ← \"A\""],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"TYPE StudentRecord\",\u001b[22m\n\u001b[2m    \"name : STRING\",\u001b[22m\n\u001b[2m    \"age : INTEGER\",\u001b[22m\n\u001b[32m-   \"grade : STRING\",\u001b[39m\n\u001b[2m    \"ENDTYPE\",\u001b[22m\n\u001b[2m    \"\",\u001b[22m\n\u001b[31m+   \"DECLARE student : StudentRecord\",\u001b[39m\n\u001b[2m    \"student.name ← \\\"John\\\"\",\u001b[22m\n\u001b[2m    \"student.age ← 20\",\u001b[22m\n\u001b[32m-   \"OUTPUT student.name\",\u001b[39m\n\u001b[32m-   \"student.grade ← \\\"A\\\"\",\u001b[39m\n\u001b[31m+   \"OUTPUT student[\\\"name\\\"]\",\u001b[39m\n\u001b[31m+   \"// TODO: student[\\\"grade\\\"] = \\\"A\\\"\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"TYPE StudentRecord\",\u001b[22m\n\u001b[2m    \"name : STRING\",\u001b[22m\n\u001b[2m    \"age : INTEGER\",\u001b[22m\n\u001b[32m-   \"grade : STRING\",\u001b[39m\n\u001b[2m    \"ENDTYPE\",\u001b[22m\n\u001b[2m    \"\",\u001b[22m\n\u001b[31m+   \"DECLARE student : StudentRecord\",\u001b[39m\n\u001b[2m    \"student.name ← \\\"John\\\"\",\u001b[22m\n\u001b[2m    \"student.age ← 20\",\u001b[22m\n\u001b[32m-   \"OUTPUT student.name\",\u001b[39m\n\u001b[32m-   \"student.grade ← \\\"A\\\"\",\u001b[39m\n\u001b[31m+   \"OUTPUT student[\\\"name\\\"]\",\u001b[39m\n\u001b[31m+   \"// TODO: student[\\\"grade\\\"] = \\\"A\\\"\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:881:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle dictionary operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle dictionary operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle complex mathematical expressions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle complex mathematical expressions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle multiple variable assignment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple variable assignment"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle lambda functions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle lambda functions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle list comprehensions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle list comprehensions"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["text ← \"Hello World\"","upper_text ← UPPER(text)","length ← LENGTH(text)","first_char ← text[0]"],"expected":["text ← \"Hello World\"","upper_text ← UPPER(text)","length ← LENGTH(text)","first_char ← MID(text, 0, 1)"],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n\u001b[2m    \"upper_text ← UPPER(text)\",\u001b[22m\n\u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n\u001b[32m-   \"first_char ← MID(text, 0, 1)\",\u001b[39m\n\u001b[31m+   \"first_char ← text[0]\",\u001b[39m\n\u001b[2m  ]\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n\u001b[2m    \"upper_text ← UPPER(text)\",\u001b[22m\n\u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n\u001b[32m-   \"first_char ← MID(text, 0, 1)\",\u001b[39m\n\u001b[31m+   \"first_char ← text[0]\",\u001b[39m\n\u001b[2m  ]\u001b[22m\n    at Object.<anonymous> (/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts:980:25)\n    at Promise.then.completed (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/wao_singapore/python-to-pseudocode/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Python to IGCSE Pseudocode Parser should handle string methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle string methods"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle boolean values and operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle boolean values and operations"},{"ancestorTitles":["Python to IGCSE Pseudocode Parser"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Python to IGCSE Pseudocode Parser should handle nested loops","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle nested loops"}],"endTime":1748832713354,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function definition\u001b[39m\u001b[22m\n\n    Content mismatch (without indentation):\n    Actual: [\"PROCEDURE greet(name)\",\"OUTPUT \\\"Hello\\\", name\",\"ENDPROCEDURE\"]\n    Expected: [\"PROCEDURE Greet(name : STRING)\",\"OUTPUT \\\"Hello\\\", name\",\"ENDPROCEDURE\"]\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 465 |\u001b[39m     \u001b[36mconst\u001b[39m expectedJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 466 |\u001b[39m     \u001b[36mif\u001b[39m (actualJson \u001b[33m!==\u001b[39m expectedJson) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 467 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Content mismatch (without indentation):\\nActual: ${actualJson}\\nExpected: ${expectedJson}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 468 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 469 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m \u001b[90m// Keep for Jest's own reporting, though the error above should catch it.\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 470 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:467:13)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function with return\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"FUNCTION Add(x : INTEGER, y : INTEGER) RETURNS INTEGER\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE add(x, y)\",\u001b[39m\n    \u001b[2m    \"RETURN x + y\",\u001b[22m\n    \u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n    \u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 494 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 495 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 496 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 497 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 498 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 499 |\u001b[39m   test(\u001b[32m'should handle function with multiple parameters and types'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:496:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function with multiple parameters and types\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"FUNCTION Calculate(num1 : REAL, num2 : REAL, operation : STRING) RETURNS REAL\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE calculate(num1, num2, operation)\",\u001b[39m\n    \u001b[2m    \"IF operation = \\\"add\\\" THEN\",\u001b[22m\n    \u001b[2m    \"RETURN num1 + num2\",\u001b[22m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[2m    \"RETURN num1 - num2\",\u001b[22m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[32m-   \"ENDFUNCTION\",\u001b[39m\n    \u001b[31m+   \"ENDPROCEDURE\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 528 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 529 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 530 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 531 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 532 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 533 |\u001b[39m   test(\u001b[32m'should handle function call'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:530:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle function call\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"result ← Add(5, 3)\",\u001b[22m\n    \u001b[32m-   \"CALL Greet(\\\"John\\\")\",\u001b[39m\n    \u001b[31m+   \"// TODO: greet(\\\"John\\\")\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 544 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 545 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 546 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 547 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 548 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 549 |\u001b[39m   \u001b[90m// 11. Arrays/Lists\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:546:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle list declaration and access\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 7\u001b[39m\n    \u001b[31m+ Received  + 7\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"DECLARE numbers : ARRAY[0:4] OF STRING\",\u001b[39m\n    \u001b[32m-   \"numbers[0] ← \\\"1\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[1] ← \\\"2\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[2] ← \\\"3\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[3] ← \\\"4\\\"\",\u001b[39m\n    \u001b[32m-   \"numbers[4] ← \\\"5\\\"\",\u001b[39m\n    \u001b[31m+   \"\",\u001b[39m\n    \u001b[31m+   \"numbers.0 ← 1\",\u001b[39m\n    \u001b[31m+   \"numbers.1 ← 2\",\u001b[39m\n    \u001b[31m+   \"numbers.2 ← 3\",\u001b[39m\n    \u001b[31m+   \"numbers.3 ← 4\",\u001b[39m\n    \u001b[31m+   \"numbers.4 ← 5\",\u001b[39m\n    \u001b[2m    \"first ← numbers[0]\",\u001b[22m\n    \u001b[32m-   \"numbers[1] ← \\\"10\\\"\",\u001b[39m\n    \u001b[31m+   \"numbers.1 ← 10\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 573 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 574 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 575 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 576 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 577 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 578 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:575:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle list with mixed types\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"mixed[0] ← \\\"1\\\"\",\u001b[39m\n    \u001b[31m+   \"mixed[0] ← 1\",\u001b[39m\n    \u001b[2m    \"mixed[1] ← \\\"hello\\\"\",\u001b[22m\n    \u001b[32m-   \"mixed[2] ← \\\"TRUE\\\"\",\u001b[39m\n    \u001b[31m+   \"mixed[2] ← TRUE\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 591 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 593 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 594 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 595 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 596 |\u001b[39m   \u001b[90m// 12. Input/Output\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:593:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle input statements\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"OUTPUT \\\"Enter your name: \\\"\",\u001b[39m\n    \u001b[2m    \"INPUT name\",\u001b[22m\n    \u001b[32m-   \"OUTPUT \\\"Enter your age: \\\"\",\u001b[39m\n    \u001b[2m    \"INPUT age\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 610 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 611 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 612 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 613 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 614 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 615 |\u001b[39m   test(\u001b[32m'should handle print statements'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:612:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle try-except block\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 0\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[33m@@ -2,7 +2,8 @@\u001b[39m\n    \u001b[2m    \"// Error handling: try-except block\",\u001b[22m\n    \u001b[2m    \"IF x ≠ 0 THEN\",\u001b[22m\n    \u001b[2m    \"result ← 10 / x\",\u001b[22m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[2m    \"OUTPUT \\\"Error occurred\\\"\",\u001b[22m\n    \u001b[31m+   \"END EXCEPT\",\u001b[39m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 674 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 675 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 676 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 677 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 678 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 679 |\u001b[39m   test(\u001b[32m'should handle try-except-finally block'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:676:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle try-except-finally block\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 7\u001b[39m\n    \u001b[31m+ Received  + 9\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"// Error handling: try-except-finally block\",\u001b[39m\n    \u001b[32m-   \"OPENFILE \\\"data.txt\\\" FOR READ\",\u001b[39m\n    \u001b[32m-   \"IF file_exists THEN\",\u001b[39m\n    \u001b[32m-   \"READFILE \\\"data.txt\\\", data\",\u001b[39m\n    \u001b[31m+   \"// Error handling: try-except block\",\u001b[39m\n    \u001b[31m+   \"IF x ≠ 0 THEN\",\u001b[39m\n    \u001b[31m+   \"file ← Open(\\\"data.txt\\\")\",\u001b[39m\n    \u001b[31m+   \"data ← file.Read()\",\u001b[39m\n    \u001b[2m    \"ELSE\",\u001b[22m\n    \u001b[32m-   \"OUTPUT \\\"File not found\\\"\",\u001b[39m\n    \u001b[31m+   \"OUTPUT \\\"File NOT found\\\"\",\u001b[39m\n    \u001b[31m+   \"// Finally block\",\u001b[39m\n    \u001b[31m+   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n    \u001b[31m+   \"END FINALLY\",\u001b[39m\n    \u001b[31m+   \"END EXCEPT\",\u001b[39m\n    \u001b[2m    \"ENDIF\",\u001b[22m\n    \u001b[32m-   \"OUTPUT \\\"Cleanup\\\"\",\u001b[39m\n    \u001b[32m-   \"CLOSEFILE \\\"data.txt\\\"\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 702 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 703 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 704 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 705 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 706 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 707 |\u001b[39m   \u001b[90m// 15. Classes (Object-Oriented Programming)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:704:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle class definition\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 6\u001b[39m\n    \u001b[31m+ Received  + 4\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"CLASS Animal\",\u001b[22m\n    \u001b[32m-   \"PRIVATE name : STRING\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE __init__(self, name)\",\u001b[39m\n    \u001b[31m+   \"// TODO: self.name = name\",\u001b[39m\n    \u001b[2m    \"\",\u001b[22m\n    \u001b[32m-   \"PUBLIC PROCEDURE NEW(name : STRING)\",\u001b[39m\n    \u001b[32m-   \"self.name ← name\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n    \u001b[31m+   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[32m-   \"\",\u001b[39m\n    \u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n    \u001b[32m-   \"OUTPUT \\\"Animal sound\\\"\",\u001b[39m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[2m    \"ENDCLASS\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 732 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 733 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 734 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 735 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 736 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 737 |\u001b[39m   test(\u001b[32m'should handle class inheritance'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:734:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle class inheritance\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"CLASS Dog INHERITS Animal\",\u001b[39m\n    \u001b[32m-   \"PUBLIC PROCEDURE Speak()\",\u001b[39m\n    \u001b[31m+   \"CLASS Dog\",\u001b[39m\n    \u001b[31m+   \"PROCEDURE speak(self)\",\u001b[39m\n    \u001b[2m    \"OUTPUT \\\"Woof\\\"\",\u001b[22m\n    \u001b[2m    \"ENDPROCEDURE\",\u001b[22m\n    \u001b[2m    \"ENDCLASS\",\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 752 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 753 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 754 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 755 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 756 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 757 |\u001b[39m   test(\u001b[32m'should handle object instantiation and method calls'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:754:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle object instantiation and method calls\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"DECLARE my_dog : Dog\",\u001b[39m\n    \u001b[32m-   \"my_dog ← NEW Dog(\\\"Buddy\\\")\",\u001b[39m\n    \u001b[32m-   \"CALL my_dog.Speak()\",\u001b[39m\n    \u001b[31m+   \"my_dog ← Dog(\\\"Buddy\\\")\",\u001b[39m\n    \u001b[31m+   \"// TODO: my_dog.speak()\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 769 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 770 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 771 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 772 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 773 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 774 |\u001b[39m   \u001b[90m// 16. File Handling\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:771:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle file operations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 6\u001b[39m\n    \u001b[31m+ Received  + 4\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"OPENFILE \\\"input.txt\\\" FOR READ\",\u001b[39m\n    \u001b[32m-   \"WHILE NOT EOF(\\\"input.txt\\\")\",\u001b[39m\n    \u001b[32m-   \"READFILE \\\"input.txt\\\", line\",\u001b[39m\n    \u001b[32m-   \"OUTPUT line\",\u001b[39m\n    \u001b[32m-   \"ENDWHILE\",\u001b[39m\n    \u001b[32m-   \"CLOSEFILE \\\"input.txt\\\"\",\u001b[39m\n    \u001b[31m+   \"// TODO: with open(\\\"input.txt\\\", \\\"r\\\") as file:\",\u001b[39m\n    \u001b[31m+   \"FOR EACH line IN file\",\u001b[39m\n    \u001b[31m+   \"OUTPUT line.strip(\",\u001b[39m\n    \u001b[31m+   \"NEXT line\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 791 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 792 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 793 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 794 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 795 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 796 |\u001b[39m   test(\u001b[32m'should handle file writing'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:793:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle file writing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 4\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[32m-   \"OPENFILE \\\"output.txt\\\" FOR WRITE\",\u001b[39m\n    \u001b[32m-   \"WRITEFILE \\\"output.txt\\\", \\\"Hello World\\\"\",\u001b[39m\n    \u001b[32m-   \"WRITEFILE \\\"output.txt\\\", number\",\u001b[39m\n    \u001b[32m-   \"CLOSEFILE \\\"output.txt\\\"\",\u001b[39m\n    \u001b[31m+   \"// TODO: with open(\\\"output.txt\\\", \\\"w\\\") as file:\",\u001b[39m\n    \u001b[31m+   \"// TODO: file.write(\\\"Hello World\\\")\",\u001b[39m\n    \u001b[31m+   \"// TODO: file.write(str(number))\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 810 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 811 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 812 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 813 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 814 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 815 |\u001b[39m   \u001b[90m// 17. Advanced Control Structures\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:812:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle dictionary operations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"TYPE StudentRecord\",\u001b[22m\n    \u001b[2m    \"name : STRING\",\u001b[22m\n    \u001b[2m    \"age : INTEGER\",\u001b[22m\n    \u001b[32m-   \"grade : STRING\",\u001b[39m\n    \u001b[2m    \"ENDTYPE\",\u001b[22m\n    \u001b[2m    \"\",\u001b[22m\n    \u001b[31m+   \"DECLARE student : StudentRecord\",\u001b[39m\n    \u001b[2m    \"student.name ← \\\"John\\\"\",\u001b[22m\n    \u001b[2m    \"student.age ← 20\",\u001b[22m\n    \u001b[32m-   \"OUTPUT student.name\",\u001b[39m\n    \u001b[32m-   \"student.grade ← \\\"A\\\"\",\u001b[39m\n    \u001b[31m+   \"OUTPUT student[\\\"name\\\"]\",\u001b[39m\n    \u001b[31m+   \"// TODO: student[\\\"grade\\\"] = \\\"A\\\"\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 879 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 880 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 881 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 882 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 883 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 884 |\u001b[39m   \u001b[90m// 19. Complex Expressions\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:881:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPython to IGCSE Pseudocode Parser › should handle string methods\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Array [\u001b[22m\n    \u001b[2m    \"text ← \\\"Hello World\\\"\",\u001b[22m\n    \u001b[2m    \"upper_text ← UPPER(text)\",\u001b[22m\n    \u001b[2m    \"length ← LENGTH(text)\",\u001b[22m\n    \u001b[32m-   \"first_char ← MID(text, 0, 1)\",\u001b[39m\n    \u001b[31m+   \"first_char ← text[0]\",\u001b[39m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 978 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Actual:'\u001b[39m\u001b[33m,\u001b[39m actualLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 979 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Expected:'\u001b[39m\u001b[33m,\u001b[39m expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 980 |\u001b[39m     expect(actualLines)\u001b[33m.\u001b[39mtoEqual(expectedLines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 981 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 982 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 983 |\u001b[39m   \u001b[90m// 24. Boolean Values\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/python-igcse-parser.test.ts\u001b[39m\u001b[0m\u001b[2m:980:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/wao_singapore/python-to-pseudocode/__tests__/python-igcse-parser.test.ts","startTime":1748832712577,"status":"failed","summary":""}],"wasInterrupted":false}
