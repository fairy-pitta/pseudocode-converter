export declare const INDENT_SIZE = 2;
export declare const PYTHON_INDENT_SIZE = 4;
export declare const OPERATORS: {
    readonly ASSIGN: "←";
    readonly EQ: "=";
    readonly NE: "≠";
    readonly LE: "≤";
    readonly GE: "≥";
    readonly AND: "AND";
    readonly OR: "OR";
    readonly NOT: "NOT";
    readonly DIV: "DIV";
    readonly MOD: "MOD";
    readonly POW: "^";
};
export declare const COMPOUND_ASSIGNMENT_OPERATORS: {
    python: string;
    pseudocode: string;
}[];
export declare const KEYWORDS: {
    readonly FUNCTION: "FUNCTION";
    readonly PROCEDURE: "PROCEDURE";
    readonly CLASS: "CLASS";
    readonly IF: "IF";
    readonly THEN: "THEN";
    readonly ELSE_IF: "ELSE IF";
    readonly ELSE: "ELSE";
    readonly END_IF: "ENDIF";
    readonly FOR: "FOR";
    readonly FOR_EACH: "FOR EACH";
    readonly IN: "IN";
    readonly TO: "TO";
    readonly STEP: "STEP";
    readonly NEXT: "NEXT";
    readonly WHILE: "WHILE";
    readonly DO: "DO";
    readonly END_WHILE: "ENDWHILE";
    readonly REPEAT: "REPEAT";
    readonly UNTIL: "UNTIL";
    readonly RETURN: "RETURN";
    readonly OUTPUT: "OUTPUT";
    readonly INPUT: "INPUT";
    readonly DECLARE: "DECLARE";
    readonly CONSTANT: "CONSTANT";
    readonly END_FUNCTION: "ENDFUNCTION";
    readonly END_PROCEDURE: "ENDPROCEDURE";
    readonly END_CLASS: "ENDCLASS";
    readonly INHERITS: "INHERITS";
    readonly NEW: "NEW";
    readonly CALL: "CALL";
    readonly PRIVATE: "PRIVATE";
    readonly PUBLIC: "PUBLIC";
    readonly SELF: "self";
};
export declare const BLOCK_TYPES: {
    readonly FUNCTION: "function";
    readonly PROCEDURE: "procedure";
    readonly CLASS: "class";
    readonly IF: "if";
    readonly ELIF: "elif";
    readonly ELSE: "else";
    readonly FOR: "for";
    readonly WHILE: "while";
    readonly REPEAT: "repeat";
    readonly ENDIF: "endif";
    readonly NEXT: "next";
    readonly ENDWHILE: "endwhile";
    readonly ENDFUNCTION: "endfunction";
    readonly ENDCLASS: "endclass";
    readonly RETURN: "return";
    readonly TRY: "try";
    readonly EXCEPT: "except";
    readonly FINALLY: "finally";
    readonly CONSTRUCTOR: "constructor";
    readonly METHOD: "method";
};
export type BlockType = typeof BLOCK_TYPES[keyof typeof BLOCK_TYPES];
